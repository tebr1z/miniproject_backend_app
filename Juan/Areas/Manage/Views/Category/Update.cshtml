@model Category

<div class="card">
    <div class="card-body">
        <h4 class="card-title mb-7">Update Category</h4>
        <form id="updateCategoryForm" method="post">
            <input type="hidden" name="CategoryId" value="@Model.CategoryId" />
            <div class="mb-3">
                <label for="currentCategoryName" class="form-label">Current Category Name</label>
                <input type="text" class="form-control" id="currentCategoryName" value="@Model.CategoryName" disabled>
            </div>
            <div class="mb-3">
                <label for="newCategoryName" class="form-label">New Category Name</label>
                <input type="text" class="form-control" id="newCategoryName" name="CategoryName" value="@Model.CategoryName" required>
            </div>
            <div class="form-check">
                <input type="checkbox" class="form-check-input" id="isDeleted" name="IsDeleted" @(Model.IsDelete ? "checked" : "")>
                <label class="form-check-label" for="isDeleted">Is Deleted</label>
            </div>
            <button type="button" class="btn bg-primary-subtle text-primary" onclick="confirmUpdate()">
                <span class="fs-4 me-1">+</span>
                Update Category
            </button>
        </form>
    </div>
</div>

<script>
    function confirmUpdate() {
        Swal.fire({
            title: 'Are you sure?',
            text: "You are about to update this category!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, update it!',
            cancelButtonText: 'No, cancel!',
            background: '#ffffff',
            width: '600px',
            padding: '3em',
        }).then((result) => {
            if (result.isConfirmed) {
                var form = document.getElementById('updateCategoryForm');
                var formData = new FormData(form);

                fetch('@Url.Action("Update", "Category")', {
                    method: 'POST',
                    body: formData,
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                title: 'Updated!',
                                text: 'The category has been updated successfully.',
                                icon: 'success',
                                confirmButtonColor: '#3085d6',
                                background: '#ffffff',
                                width: '600px',
                                padding: '3em',
                            }).then(() => {
                                window.location.href = '@Url.Action("Index", "Category")';
                            });
                        } else {
                            Swal.fire({
                                title: 'Error',
                                text: data.message,
                                icon: 'error',
                                confirmButtonColor: '#3085d6',
                                background: '#ffffff',
                                width: '600px',
                                padding: '3em',
                            });
                        }
                    })
                    .catch(error => {
                        Swal.fire({
                            title: 'Error',
                            text: 'An unexpected error occurred. Please try again.',
                            icon: 'error',
                            confirmButtonColor: '#3085d6',
                            background: '#ffffff',
                            width: '600px',
                            padding: '3em',
                        });
                    });
            } else if (result.dismiss === Swal.DismissReason.cancel) {
                Swal.fire({
                    title: 'Cancelled',
                    text: 'The action has been cancelled.',
                    icon: 'error',
                    confirmButtonColor: '#3085d6',
                    background: '#ffffff',
                    width: '600px',
                    padding: '3em',
                });
            }
        });
    }
</script>
